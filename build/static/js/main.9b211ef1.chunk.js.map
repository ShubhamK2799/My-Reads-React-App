{"version":3,"sources":["BooksAPI.js","Book.js","BookSelf.js","BookSelfContainer.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Book","bookDetails","toshelf","this","props","updateShelf","_this","react_default","a","createElement","className","style","width","height","backgroundImage","imageLinks","smallThumbnail","onChange","event","handleUpdate","target","value","title","authors","Component","BookShelf","type","map","src_Book","key","BookSelfContainer","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","allBooks","setState","_this3","BooksAPI","response","newbooks","forEach","newbook","console","log","BookSelf","filter","Link","to","Search","searchQuery","error","results","placeholder","BooksApp","BrowserRouter","Route","exact","path","component","BookShelfContainer","React","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9b211ef1.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React,{Component} from 'react'\n\nclass Book extends Component{\n\n    handleUpdate(bookDetails,toshelf){\n        this.props.updateShelf(bookDetails,toshelf)\n    }\n\n    render(){\n        return (<li>\n            <div className=\"book\">\n                <div className=\"book-top\">\n                {/* {console.log(this.props.imageUrl)} */}\n                <div className=\"book-cover\" style={{ \n                    width: 128, height: 193, \n                    backgroundImage: `url(${this.props.bookDetails.imageLinks.smallThumbnail})`\n                    }}/>\n                <div className=\"book-shelf-changer\">\n                    <select onChange={event => this.handleUpdate(this.props.bookDetails,event.target.value)} value=\"Move To\">\n                    {/* <option value=\"move\" disabled>Move to...</option> */}\n                    <option value=\"currentlyReading\">Currently Reading</option>  The first option doesnot works i dnt know why\n                    <option value=\"wantToRead\">Want to Read</option>\n                    <option value=\"read\">Read</option>\n                    <option value=\"none\">None</option>\n                    </select>\n                </div>\n                </div>\n                <div className=\"book-title\">{this.props.bookDetails.title}</div>\n                <div className=\"book-authors\">{this.props.bookDetails.authors[0]}</div>\n            </div>\n        </li>);\n    }\n}\n\nexport default Book\n","import React, {Component} from 'react';\nimport Book from './Book.js';\nimport './App.css';\n\nclass BookShelf extends Component {\n    render() {\n        return (\n        <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">{this.props.type}</h2>\n            <div className=\"bookshelf-books\">\n                <ol className=\"books-grid\">\n                {this.props.books.map( book=>\n                    <Book \n                      bookDetails={book}\n                      key={book.id}\n                      updateShelf={this.props.updateShelf}\n                    />\n                )}\n                </ol>\n            </div>\n        </div>);\n    }\n}\n\nexport default BookShelf;\n","import React,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport BookShelf from './BookSelf'\n\nclass BookSelfContainer extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            books:[]\n            // shelf:''\n        }\n        // in order to access this.state in the function\n        this.updateShelf=this.updateShelf.bind(this)\n    }\n    componentWillMount(){\n        //BooksApi.getAll() will return a promise\n        // Here if we are using expanded function decleration then we need to return the expression \n        // to consider it as a assignment else use shorthand function notation\n        BooksAPI.getAll()\n        .then((allBooks)=>{\n            this.setState({books:allBooks});\n        })\n    }\n\n    updateShelf(book,toshelf){\n      BooksAPI.update(book,toshelf).then(response=>{\n          var newbooks = this.state.books;\n          newbooks.forEach(function(newbook){\n              if(newbook.id===book.id) newbook.shelf=toshelf\n              return newbook\n          })\n          console.log(newbooks)\n          this.setState({books:newbooks}) \n      })\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n              <div className=\"list-books\">\n                \n                <div className=\"list-books-title\">\n                  <h1>MyReads</h1>\n                </div>\n\n                <div className=\"list-books-content\">  \n                  <BookShelf \n                    type=\"Currently Reading\" \n                    books= {this.state.books.filter(book=> book.shelf==='currentlyReading')}\n                    updateShelf = {this.updateShelf}\n                  />\n                </div>\n                \n                <div className=\"list-books-content\">  \n                  <BookShelf \n                  type=\"Want to Read\" \n                    books={this.state.books.filter(book=> book.shelf==='wantToRead')}\n                    updateShelf = {this.updateShelf}\n                  />\n                </div>\n                \n                <div className=\"list-books-content\">  \n                  <BookShelf type=\"Read\"\n                    books={this.state.books.filter(book=> book.shelf==='read')}\n                    updateShelf = {this.updateShelf} \n                  />\n                </div>\n                \n\n                <div className=\"search-books-results\">\n                  <div className=\"open-search\">\n                    <Link to='/Search'>\n                      <button>Add a book</button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n            )\n    }\n}\n\nexport default BookSelfContainer","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI.js';\nimport Book from './Book.js';\n\n\nclass Search extends Component {\n      constructor(props) {\n          super(props);\n          this.state = {\n            results: []\n          }\n        }\n      \n      updateShelf(book,toshelf){\n        BooksAPI.update(book,toshelf).then(response=>{\n            console.log(response)\n        })\n      }\n  \n      searchQuery = function(query){\n          console.log(\"Query is \"+query);\n          if(query){\n            BooksAPI.search(query).then((response) => {\n              if(response.error)\n                  this.setState({ results: [] })\n              else\n                  this.setState({ results: response })\n            })\n          }else\n            this.setState({ results: [] })\n          console.log(this.state.results);\n      }\n\n    render(){\n        return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to='/'>Close</Link>\n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\" placeholder=\"Search by title or author\" \n            onChange={(event) => this.searchQuery(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n          {this.state.results.map( book=>\n              <Book \n                bookDetails={book}\n                key={book.id}\n                updateShelf={this.updateShelf}\n              />\n          )}\n          </ol>\n        </div>\n      </div>)\n    }\n}\n\nexport default Search","import React from 'react'\nimport BookShelfContainer from './BookSelfContainer'\nimport Search from './Search'\nimport {Route, BrowserRouter} from 'react-router-dom'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        {/* We need to use browser router to embed routes */}\n        <div>\n        <Route exact path='/' component={BookShelfContainer}/>\n        <Route exact path='/Search' component={Search}/>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default BooksApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}