{"ast":null,"code":"import _classCallCheck from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/BookSelfContainer.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI';\nimport BookShelf from './BookSelf';\n\nvar BookSelfContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookSelfContainer, _Component);\n\n  function BookSelfContainer(props) {\n    var _this;\n\n    _classCallCheck(this, BookSelfContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookSelfContainer).call(this, props));\n    _this.state = {\n      books: [],\n      shelf: ''\n    };\n    return _this;\n  }\n\n  _createClass(BookSelfContainer, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      //BooksApi.getAll() will return a promise\n      // Here if we are using expanded function decleration then we need to return the expression \n      // to consider it as a assignment else use shorthand function notation\n      BooksAPI.getAll().then(function (allBooks) {\n        _this2.setState({\n          books: allBooks\n        });\n      });\n    }\n  }, {\n    key: \"updateShelf\",\n    value: function updateShelf(book, toshelf) {\n      var _this3 = this;\n\n      BooksAPI.update(book, toshelf).then(function (response) {\n        console.log(response);\n        var newbooks = _this3.state.books; // newbooks = newbooks.forEach(function(newbook){\n        //     if(newbook.id===book.id) newbook.shelf=toshelf\n        // })\n\n        console.log(newbooks);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"app\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-books-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"MyReads\")), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(BookShelf, {\n        type: \"Currently Reading\",\n        books: this.state.books.filter(function (book) {\n          return book.shelf === 'currentlyReading';\n        }),\n        updateShelf: this.updateShelf,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(BookShelf, {\n        type: \"Want to Read\",\n        books: this.state.books.filter(function (book) {\n          return book.shelf === 'wantToRead';\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"list-books-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(BookShelf, {\n        type: \"Read\",\n        books: this.state.books.filter(function (book) {\n          return book.shelf === 'read';\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"open-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/Search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Add a book\"))))));\n    }\n  }]);\n\n  return BookSelfContainer;\n}(Component);\n\nexport default BookSelfContainer;","map":{"version":3,"sources":["/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/BookSelfContainer.js"],"names":["React","Component","Link","BooksAPI","BookShelf","BookSelfContainer","props","state","books","shelf","getAll","then","allBooks","setState","book","toshelf","update","response","console","log","newbooks","filter","updateShelf"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport BookShelf from './BookSelf'\n\nclass BookSelfContainer extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            books:[],\n            shelf:''\n        }\n    }\n    componentWillMount(){\n        //BooksApi.getAll() will return a promise\n        // Here if we are using expanded function decleration then we need to return the expression \n        // to consider it as a assignment else use shorthand function notation\n        BooksAPI.getAll()\n        .then((allBooks)=>{\n            this.setState({books:allBooks});\n        })\n    }\n\n    updateShelf(book,toshelf){\n        BooksAPI.update(book,toshelf).then(response=>{\n            console.log(response)\n            var newbooks = this.state.books;\n            // newbooks = newbooks.forEach(function(newbook){\n            //     if(newbook.id===book.id) newbook.shelf=toshelf\n            // })\n            console.log(newbooks)\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n              <div className=\"list-books\">\n                \n                <div className=\"list-books-title\">\n                  <h1>MyReads</h1>\n                </div>\n\n                <div className=\"list-books-content\">  \n                  <BookShelf \n                    type=\"Currently Reading\" \n                    books= {this.state.books.filter(book=> book.shelf==='currentlyReading')}\n                    updateShelf = {this.updateShelf}\n                  />\n                </div>\n                \n                <div className=\"list-books-content\">  \n                  <BookShelf type=\"Want to Read\" \n                    books={this.state.books.filter(book=> book.shelf==='wantToRead')}\n                  />\n                </div>\n                \n                <div className=\"list-books-content\">  \n                  <BookShelf type=\"Read\"\n                    books={this.state.books.filter(book=> book.shelf==='read')} \n                  />\n                </div>\n                \n\n                <div className=\"search-books-results\">\n                  <div className=\"open-search\">\n                    <Link to='/Search'>\n                      <button>Add a book</button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n            )\n    }\n}\n\nexport default BookSelfContainer"]},"metadata":{},"sourceType":"module"}