{"ast":null,"code":"import _classCallCheck from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../../BooksAPI.js';\nimport Book from '../../Book.js';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage(props) {\n    var _this;\n\n    _classCallCheck(this, SearchPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).call(this, props));\n\n    _this.updateQuery = function (query) {\n      _this.setState({\n        query: query\n      }, _this.updateSearchedBooks);\n    };\n\n    _this.updateSearchedBooks = function (query) {\n      if (_this.state.query === '' || _this.state.query === undefined) {\n        return _this.setState({\n          results: []\n        });\n      }\n\n      BooksAPI.search(_this.state.query.trim()).then(function (res) {\n        if (res.error) {\n          return _this.setState({\n            results: []\n          });\n        } else {\n          var hashTable = {};\n          res.forEach(function (book) {\n            shelf.forEach(function (book) {\n              return hashTable[book.id] = book.shelf;\n            });\n            book.shelf = hashTable[book.id] || 'none';\n          });\n          return _this.setState({\n            results: [res]\n          });\n        }\n      });\n    };\n\n    _this.updateBook = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (resp) {\n        book.shelf = shelf;\n\n        _this.setState(function (state) {\n          return {\n            books: state.books.filter(function (Books) {\n              return _this.id !== book.id;\n            }).concat({\n              book: book\n            })\n          };\n        });\n      });\n    };\n\n    _this.state = {\n      book: {},\n      results: [],\n      query: ''\n    };\n    return _this;\n  }\n\n  _createClass(SearchPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (resp) {\n        _this2.setState({\n          books: resp\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        value: this.state.query,\n        onChange: function onChange(event) {\n          return _this3.updateQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.results.map(function (book, key) {\n        return React.createElement(Book, {\n          updatebook: _this3.updateBook,\n          key: key,\n          book: book,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/Search.js"],"names":["React","Component","Link","BooksAPI","Book","SearchPage","props","updateQuery","query","setState","updateSearchedBooks","state","undefined","results","search","trim","then","res","error","hashTable","forEach","book","shelf","id","updateBook","update","resp","books","filter","Books","concat","getAll","event","target","value","map","key","Search"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../../BooksAPI.js';\nimport Book from '../../Book.js';\n\n\nclass SearchPage extends Component {\n\n\nconstructor(props) {\n\n    super(props);\n    this.state = {\n      book: {},\n      results: [],\n      query: ''\n    }\n  }\n\n  componentDidMount() {\n  BooksAPI.getAll()\n  .then(resp => {\n    this.setState({books: resp});\n  });\n  }\n\n  updateQuery = (query) => {\n\n    this.setState({query: query},this.updateSearchedBooks);\n\n    }\n\n  updateSearchedBooks = (query) =>\n  {\n    if (this.state.query === '' || this.state.query === undefined)\n    {\n      return this.setState({results: [] });\n    }\n\n    BooksAPI.search(this.state.query.trim()).then(res => {\n\n        if (res.error)\n        {\n          return this.setState({ results: [] });\n\n        } else {\n\n          const hashTable = {};\n\n          res.forEach(book => {\n\n          shelf.forEach(book => hashTable[book.id] = book.shelf);\n\n          book.shelf = hashTable[book.id] || 'none';\n\n        });\n        return this.setState({results: [res] });\n    }\n  });\n}\n\nupdateBook = (book, shelf) => {\n  BooksAPI.update(book, shelf)\n  .then(resp => {\n    book.shelf = shelf;\n    this.setState( state => ({\n      books: state.books.filter(Books => this.id !== book.id).concat({book}) })\n  );\n});\n}\n\n    render(){\n        return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to='/'>Close</Link>\n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query}\n            onChange={(event) => this.updateQuery(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n          {\n            this.state.results.map((book, key) => <Book updatebook={this.updateBook} key={key} book={book} />)\n          }\n          </ol>\n        </div>\n      </div>)\n    }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}