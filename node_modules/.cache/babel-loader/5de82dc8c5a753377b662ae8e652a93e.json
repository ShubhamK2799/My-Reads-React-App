{"ast":null,"code":"import _classCallCheck from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI.js';\nimport Book from './Book.js';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.searchQuery = function (query) {\n      var _this2 = this;\n\n      if (query.items.length === 0) return this.setState({\n        results: []\n      });\n      console.log(\"Query is \" + query);\n      BooksAPI.search(query).then(function (response) {\n        if (response.error) console.log(\"No results found\");\n\n        _this2.setState({\n          results: response.items\n        });\n\n        console.log(response.items);\n      }).catch(function () {\n        console.log(\"Got an error\");\n        return _this2.setState({\n          results: []\n        });\n      });\n    };\n\n    _this.state = {\n      results: []\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this3 = this;\n\n      BooksAPI.search('').then(function (allBooks) {\n        console.log(\"initialized the results to\" + allBooks);\n\n        _this3.setState({\n          results: allBooks\n        });\n      });\n    }\n  }, {\n    key: \"updateShelf\",\n    value: function updateShelf(book, toshelf) {\n      BooksAPI.update(book, toshelf).then(function (response) {\n        console.log(response);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        onChange: function onChange(event) {\n          return _this4.searchQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/Search.js"],"names":["React","Component","Link","BooksAPI","Book","Search","props","searchQuery","query","items","length","setState","results","console","log","search","then","response","error","catch","state","allBooks","book","toshelf","update","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;IAGMC,M;;;;;AACA,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;;AADe,UAsBnBC,WAtBmB,GAsBL,UAASC,KAAT,EAAe;AAAA;;AACzB,UAAIA,KAAK,CAACC,KAAN,CAAYC,MAAZ,KAAqB,CAAzB,EACE,OAAO,KAAKC,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAYN,KAAxB;AAEFL,MAAAA,QAAQ,CAACY,MAAT,CAAgBP,KAAhB,EAAuBQ,IAAvB,CAA4B,UAAAC,QAAQ,EAAI;AACpC,YAAGA,QAAQ,CAACC,KAAZ,EACEL,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,QAAA,MAAI,CAACH,QAAL,CAAc;AAACC,UAAAA,OAAO,EAAEK,QAAQ,CAACR;AAAnB,SAAd;;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACR,KAArB;AACL,OALD,EAMCU,KAND,CAMO,YAAI;AACPN,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,eAAO,MAAI,CAACH,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAAd,CAAP;AACH,OATD;AAUH,KArCkB;;AAEf,UAAKQ,KAAL,GAAa;AACXR,MAAAA,OAAO,EAAE;AADE,KAAb;AAFe;AAKhB;;;;yCAEiB;AAAA;;AAClBT,MAAAA,QAAQ,CAACY,MAAT,CAAgB,EAAhB,EACCC,IADD,CACM,UAACK,QAAD,EAAY;AACdR,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAA8BO,QAA1C;;AACA,QAAA,MAAI,CAACV,QAAL,CAAc;AAACC,UAAAA,OAAO,EAACS;AAAT,SAAd;AACH,OAJD;AAKD;;;gCAGWC,I,EAAKC,O,EAAQ;AACvBpB,MAAAA,QAAQ,CAACqB,MAAT,CAAgBF,IAAhB,EAAqBC,OAArB,EAA8BP,IAA9B,CAAmC,UAAAC,QAAQ,EAAE;AACzCJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACH,OAFD;AAGD;;;6BAmBK;AAAA;;AACJ,aACF;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAA+B,QAAA,EAAE,EAAC,GAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,2BAA/B;AACA,QAAA,QAAQ,EAAE,kBAACQ,KAAD;AAAA,iBAAW,MAAI,CAAClB,WAAL,CAAiBkB,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,CADF,EAQE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARF,CADE;AAqBH;;;;EA9DgB1B,S;;AAiErB,eAAeI,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI.js';\nimport Book from './Book.js';\n\n\nclass Search extends Component {\n      constructor(props) {\n          super(props);\n          this.state = {\n            results: []\n          }\n        }\n\n      componentWillMount(){\n        BooksAPI.search('')\n        .then((allBooks)=>{\n            console.log(\"initialized the results to\"+ allBooks);\n            this.setState({results:allBooks});\n        })\n      }\n      \n      \n      updateShelf(book,toshelf){\n        BooksAPI.update(book,toshelf).then(response=>{\n            console.log(response)\n        })\n      }\n\n      searchQuery = function(query){\n          if (query.items.length===0)\n            return this.setState({results: [] });\n            console.log(\"Query is \"+query);\n\n          BooksAPI.search(query).then(response => {\n              if(response.error) \n                console.log(\"No results found\")\n                this.setState({results: response.items });\n                console.log(response.items);\n          })\n          .catch(()=>{\n              console.log(\"Got an error\")\n              return this.setState({ results: [] });\n          });\n      }\n\n    render(){\n        return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to='/'>Close</Link>\n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\" placeholder=\"Search by title or author\" \n            onChange={(event) => this.searchQuery(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n          {/* {this.props.results.map( book=>\n              <Book \n                bookDetails={book}\n                key={book.id}\n                updateShelf={this.props.updateShelf}\n              />\n          )} */}\n          </ol>\n        </div>\n      </div>)\n    }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}