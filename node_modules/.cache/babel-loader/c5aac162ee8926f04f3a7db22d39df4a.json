{"ast":null,"code":"import _classCallCheck from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI.js';\nimport Book from './Book.js';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.ugetQuery = function (query) {\n      if (_this.state.query.length === 0 || _this.state.query === undefined) return _this.setState({\n        results: []\n      });\n      console.log(_this.state.query.trim()); //   BooksAPI.search(this.state.query.trim()).then(res => {\n      //       if (res.error)\n      //         return this.setState({ results: [] });\n      //       else {\n      //         const hashTable = {};\n      //         res.forEach(book => {\n      //         shelf.forEach(book => hashTable[book.id] = book.shelf);\n      //         book.shelf = hashTable[book.id] || 'none';\n      //       });\n      //       return this.setState({results: [res] });\n      //   }\n      // });\n    };\n\n    _this.updateBook = function (book, shelf) {\n      BooksAPI.update(book, shelf).then(function (resp) {\n        book.shelf = shelf;\n\n        _this.setState(function (state) {\n          return {\n            books: state.books.filter(function (Books) {\n              return _this.id !== book.id;\n            }).concat({\n              book: book\n            })\n          };\n        });\n      });\n    };\n\n    _this.state = {\n      book: {},\n      results: [],\n      query: ''\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      BooksAPI.getAll().then(function (resp) {\n        _this2.setState({\n          books: resp\n        });\n      });\n    } // getQuery = (query) => {\n    //   this.setState({query: query},this.updateSearchedBooks);\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"search-books\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-books-bar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Link, {\n        className: \"close-search\",\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Close\"), React.createElement(\"div\", {\n        className: \"search-books-input-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title or author\",\n        onChange: function onChange(event) {\n          return _this3.getQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"search-books-results\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        className: \"books-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.results.map(function (book, key) {\n        return React.createElement(Book, {\n          updatebook: _this3.updateBook,\n          key: key,\n          book: book,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/media/shubham/Library/WebD Reactjs/Final/reactnd-project-myreads-starter/src/Search.js"],"names":["React","Component","Link","BooksAPI","Book","Search","props","ugetQuery","query","state","length","undefined","setState","results","console","log","trim","updateBook","book","shelf","update","then","resp","books","filter","Books","id","concat","getAll","event","getQuery","target","value","map","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from './BooksAPI.js';\nimport Book from './Book.js';\n\n\nclass Search extends Component {\n      constructor(props) {\n          super(props);\n          this.state = {\n            book: {},\n            results: [],\n            query: ''\n          }\n        }\n\n      componentWillMount() {\n        BooksAPI.getAll()\n          .then(resp => {\n            this.setState({books: resp});\n          });\n      }\n\n      // getQuery = (query) => {\n      //   this.setState({query: query},this.updateSearchedBooks);\n      // }\n\n      ugetQuery = (query) =>{\n          if (this.state.query.length===0 || this.state.query === undefined)\n            return this.setState({results: [] });\n\n          console.log(this.state.query.trim());\n        //   BooksAPI.search(this.state.query.trim()).then(res => {\n        //       if (res.error)\n        //         return this.setState({ results: [] });\n        //       else {\n        //         const hashTable = {};\n        //         res.forEach(book => {\n        //         shelf.forEach(book => hashTable[book.id] = book.shelf);\n        //         book.shelf = hashTable[book.id] || 'none';\n        //       });\n        //       return this.setState({results: [res] });\n        //   }\n        // });\n      }\n\n    updateBook = (book, shelf) => {\n      BooksAPI.update(book, shelf)\n      .then(resp => {\n        book.shelf = shelf;\n        this.setState( state => ({\n          books: state.books.filter(Books => this.id !== book.id).concat({book}) })\n      );\n    });\n    }\n\n    render(){\n        return (\n      <div className=\"search-books\">\n        <div className=\"search-books-bar\">\n          <Link className=\"close-search\" to='/'>Close</Link>\n          <div className=\"search-books-input-wrapper\">\n            <input type=\"text\" placeholder=\"Search by title or author\" \n            onChange={(event) => this.getQuery(event.target.value)} />\n          </div>\n        </div>\n        <div className=\"search-books-results\">\n          <ol className=\"books-grid\">\n          {\n            this.state.results.map((book, key) => <Book updatebook={this.updateBook} key={key} book={book} />)\n          }\n          </ol>\n        </div>\n      </div>)\n    }\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}